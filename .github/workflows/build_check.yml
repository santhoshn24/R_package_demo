# r_cmd_check workflow

name: r_cmd_check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  r_cmd_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use R version 3.6.3
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '3.6.3'

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
          
      #- name: Install system dependencies
      #  run: |
      #    sudo apt update
      #    sudo apt-get update
      #    sudo apt-get -y git libnlopt-dev libjpeg-dev libssh-dev libcurl4-openssl-dev libxml2-dev libcairo2-dev curl tree texinfo pandoc
        #  sudo apt-get install -y curl
         
      
      - name: curl
        uses: wei/curl@master
        with:
          args: https://httpbin.org/get
        
      - name: Install dependencies
        run: |
           Rscript -e "install.packages('remotes')" \
                   -e "remotes::install_cran('rcmdcheck')" \
                   -e  "remotes::install_deps(dependencies = TRUE)" 
                    
        
      #- name: Install dependencies (not working)
      #  run: |
      #   install.packages("remotes")
      #    remotes::install_deps(dependencies = TRUE, INSTALL_opts=c("--no-multiarch"))
      #    remotes::install_cran("rcmdcheck")
      #    shell: Rscript {0}

      - name: R CMD Build
        run: |
          R CMD build --no-build-vignettes --no-manual . 
        #  R CMD INSTALL *.tar.gz 
        shell: bash
          
      - name: Upload check results
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
      
      - name: Build R package
        run: |
          R CMD build ${{ github.event.repository.name }}
          echo "PKGBUILD=$(echo *.tar.gz)" >> $GITHUB_ENV
        shell: bash
        
      - name: Check
        run: rcmdcheck::rcmdcheck("tempconv_0.0.1.tar.gz", args = "--no-manual", error_on = "error")
        shell: Rscript {0}
        
      - name: Check R package
        run: R CMD check --no-manual ${{ env.PKGBUILD }}
        shell: bash
        
      
